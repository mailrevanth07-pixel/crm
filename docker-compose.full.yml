version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: crm-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://mohan_mutha_crm_user:m7SvGjjOQb9mWLxUU7zfGa5IsqJu6qnx@dpg-d32i9s2dbo4c73af6k80-a.oregon-postgres.render.com/mohan_mutha_crm?sslmode=require
      - JWT_SECRET=dev_jwt_secret_key_for_development_only
      - JWT_REFRESH_SECRET=dev_jwt_refresh_secret_key_for_development_only
      - PORT=3001
      - FRONTEND_URL=http://localhost:3000
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - crm-network
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: crm-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - crm-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

  # Redis for Socket.IO and Job Queue
  redis:
    image: redis:7-alpine
    container_name: crm-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # RabbitMQ for Message Queue (Optional - can use Redis instead)
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: crm-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    profiles:
      - rabbitmq

volumes:
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  crm-network:
    driver: bridge
