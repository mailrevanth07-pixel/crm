version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: crm-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: crm_dev
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - crm-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for development
  redis:
    image: redis:7-alpine
    container_name: crm-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - crm-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Development
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: crm-backend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://mohan_mutha_crm_user:m7SvGjjOQb9mWLxUU7zfGa5IsqJu6qnx@dpg-d32i9s2dbo4c73af6k80-a.oregon-postgres.render.com/mohan_mutha_crm?sslmode=require
      - JWT_SECRET=dev_jwt_secret_key_for_development_only
      - JWT_REFRESH_SECRET=dev_jwt_refresh_secret_key_for_development_only
      - PORT=3001
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - crm-dev-network
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run dev

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  crm-dev-network:
    driver: bridge

